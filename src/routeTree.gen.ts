/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FoodDeliveryIndexRouteImport } from './routes/food-delivery/index'
import { Route as FoodDeliveryRestaurantRouteImport } from './routes/food-delivery/restaurant'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FoodDeliveryIndexRoute = FoodDeliveryIndexRouteImport.update({
  id: '/food-delivery/',
  path: '/food-delivery/',
  getParentRoute: () => rootRouteImport,
} as any)
const FoodDeliveryRestaurantRoute = FoodDeliveryRestaurantRouteImport.update({
  id: '/food-delivery/restaurant',
  path: '/food-delivery/restaurant',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/food-delivery/restaurant': typeof FoodDeliveryRestaurantRoute
  '/food-delivery': typeof FoodDeliveryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/food-delivery/restaurant': typeof FoodDeliveryRestaurantRoute
  '/food-delivery': typeof FoodDeliveryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/food-delivery/restaurant': typeof FoodDeliveryRestaurantRoute
  '/food-delivery/': typeof FoodDeliveryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/food-delivery/restaurant' | '/food-delivery'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/food-delivery/restaurant' | '/food-delivery'
  id: '__root__' | '/' | '/food-delivery/restaurant' | '/food-delivery/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FoodDeliveryRestaurantRoute: typeof FoodDeliveryRestaurantRoute
  FoodDeliveryIndexRoute: typeof FoodDeliveryIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/food-delivery/': {
      id: '/food-delivery/'
      path: '/food-delivery'
      fullPath: '/food-delivery'
      preLoaderRoute: typeof FoodDeliveryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/food-delivery/restaurant': {
      id: '/food-delivery/restaurant'
      path: '/food-delivery/restaurant'
      fullPath: '/food-delivery/restaurant'
      preLoaderRoute: typeof FoodDeliveryRestaurantRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FoodDeliveryRestaurantRoute: FoodDeliveryRestaurantRoute,
  FoodDeliveryIndexRoute: FoodDeliveryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
